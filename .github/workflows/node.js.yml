# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: pg-test

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres: 
        # Docker Hub image
        image: bitnami/postgresql:11-debian-9
        # Provide the password for postgres
        env:
          POSTGRESQL_USERNAME: root
          POSTGRESQL_PASSWORD: password
          POSTGRESQL_DATABASE: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

  test-server:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Clean and Install
      working-directory: ./server
      run: npm ci
    
    - name: Run Server test suite
      working-directory: ./server
      env:
        PORT: 3003
        DB_HOST: localhost 
        DB_PORT:  5432
        DB_USER: root
        DB_PASSWORD: password
        DB_DATABASE: test
        SECRET_KEY: secretKeylolz
        LOG_FORMAT: dev
        LOG_DIR: ../logs/tests
        ORIGIN: true
        CREDENTIALS: true
      run: npm test

  test-client:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Clean and Install
      working-directory: ./client
      run: npm ci
    
    - name: Run Client test suite
      working-directory: ./client
      env:
        CI: true
      run: npm test
